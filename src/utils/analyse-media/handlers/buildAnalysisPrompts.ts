import { logger } from '../../shared/logger';
export function buildAnalysisPrompt(blobJson: any, workflow: any): string {
  // Sanitize and truncate blob JSON to prevent token limit issues
  const sanitizedBlobJson = {
    mediaId: blobJson.mediaId || null,
    link: blobJson.link || null,
    username: blobJson.username || null,
    title: blobJson.title || "",
    caption: blobJson.caption || "",
    viewCount: blobJson.viewCount || null,
    likeCount: blobJson.likeCount || null,
    date: blobJson.date || null,
    source: blobJson.source || null,
    // Only include essential workflow data
    workflow: {
      l: blobJson.workflow?.l || null,
      cc: blobJson.workflow?.cc || null,
      w: blobJson.workflow?.w || []
    }
  };

  return [
    'You are a highly intelligent AI assistant specialized in analyzing media content and extracting structured data based on a specific JSON schema.',
    'Our aim is to ultimately create a knowledge graph of travel, tourism and related businesses such as restaurants, hotels, experiences, museums, tours and theatres from social media content.',
    'Your task is to analyze the provided media data and workflow context to generate a single, valid JSON object.',
    '',
    'IMPORTANT: Your response MUST be ONLY valid JSON. Do NOT include any explanations, markdown, or extra text. Do NOT wrap the JSON in code blocks. Output ONLY the JSON object.',
    '',
    '### INPUT DATA ###',
    '--- MEDIA DATA ---',
    `mediaId: ${sanitizedBlobJson.mediaId || 'N/A'}`,
    `link: ${sanitizedBlobJson.link || 'N/A'}`,
    `username: ${sanitizedBlobJson.username || 'N/A'}`,
    `title: ${sanitizedBlobJson.title || 'N/A'}`,
    `caption: ${sanitizedBlobJson.caption || 'N/A'}`,
    `viewCount: ${sanitizedBlobJson.viewCount || 'null'}`,
    `likeCount: ${sanitizedBlobJson.likeCount || 'null'}`,
    `date: ${sanitizedBlobJson.date || 'N/A'}`,
    `source: ${sanitizedBlobJson.source || 'N/A'}`,
    `workflow: ${sanitizedBlobJson.workflow ? `l=${sanitizedBlobJson.workflow.l}, cc=${sanitizedBlobJson.workflow.cc}, w=[${sanitizedBlobJson.workflow.w?.join(', ') || ''}]` : 'N/A'}`,
    '--- END MEDIA DATA ---',
    '',
    '--- WORKFLOW CONTEXT ---',
    `batchId: ${workflow?.batchId || 'N/A'}`,
    `stage: ${workflow?.stage || 'N/A'}`,
    `timestamp: ${workflow?.timestamp || 'N/A'}`,
    `l: ${JSON.stringify(workflow?.l || null)}`,
    `cc: ${JSON.stringify(workflow?.cc || null)}`,
    `w: ${JSON.stringify(workflow?.w || [])}`,
    '--- END WORKFLOW CONTEXT ---',
    '',
    '### REQUIRED OUTPUT FIELDS ###',
'* **title**: Create a clear, engaging title that describes what someone would experience or see. Focus on the main activity, venue, or location. Keep it under 70 characters and use Title Case. Remove usernames, hashtags, promotional tags, and emojis.',
'  Example: "Afternoon Tea at The Assembly House Norwich" (not "Rachel Whitaker on Instagram: AD afternoon tea @assembly_house #norwich")',
'* **slug**: URL-friendly identifier combining title and mediaId (lowercase, hyphens, no special chars)',
'* **caption**: Clean version of caption/title (remove excess whitespace, emojis, redundant punctuation)',

'* **mediaDescription**: Array of strings describing visual elements objectively',
'* **likeCount**: Number from input data or null',
'* **viewCount**: Number from input data or null',
'* **venues**: Array of specific, named, physical businesses. See "RULES FOR VENUES" for strict criteria.',
'* **locations**: Array of landmarks, geographical features, or tourist sites that are not primarily a bookable business (e.g., parks, squares, mountains, well-known streets).',
'* **context**: Object with (REQUIRED - ALWAYS INCLUDE):',
'  - l: Copy exactly from WORKFLOW CONTEXT.l (string or null)',
'  - cc: Copy exactly from WORKFLOW CONTEXT.cc (string or null)',
'  - w: Copy exactly from WORKFLOW CONTEXT.w (array of strings, never empty array if original has values)',
'',
'### RULES FOR VENUES ###',
'1.  **MUST be a specific, named business:** Identify proper nouns that are clearly businesses. For example, "The Grand Hotel" is a venue; "a nice hotel" is not.',
'2.  **MUST be a physical place:** The business must have a physical location a person can visit. Online-only businesses are not venues.',
'3.  **INCLUDE:** Restaurants, hotels, cafes, bars, museums, theatres, tour operators, specific named shops.',
'4.  **EXCLUDE (Do NOT include):**',
'    - **Product Brands:** e.g., "Coca-Cola", "Jaffa Cakes", "Nike".',
'    - **Generic Food or Items:** e.g., "pizza", "sushi", "souvenirs".',
'    - **General Categories:** e.g., "a cheap Chinese restaurant", "a souvenir shop".',
'    - **Geographical Locations:** These belong in the "locations" array (e.g., "Hyde Park", "Eiffel Tower"). If a location is also a bookable business (like a museum), prioritize it as a venue.',
'',
'### OUTPUT FORMAT ###',
    'Return ONLY a valid JSON object with 2-space indentation. No explanations, no markdown, no extra text, no code blocks.',
    'CRITICAL: The "context" field is mandatory and must always preserve the workflow values from WORKFLOW CONTEXT.',
    '',
    '### EXAMPLE ###',
    '{',
    '  "title": "Hotel Experience in City",',
    '  "slug": "hotel-experience-city-12345",',
    '  "caption": "Great stay at this hotel",',
    '  "mediaDescription": ["Hotel exterior view", "Interior lobby area"],',
    '  "likeCount": 41,',
    '  "viewCount": 8349,',
    '  "venues": [{"name": "Hotel Name", "confidence": 0.8}],',
    '  "locations": [],',
    '  "context": {"l": "lille", "cc": "france", "w": ["things to do in lille"]}',
    '}'
  ].join('\n');
}

// Alternative function with better error handling
export function buildAnalysisPromptSafe(blobJson: any, workflow: any): { prompt: string; tokenEstimate: number } {
  try {
    const prompt = buildAnalysisPrompt(blobJson, workflow);
    // Rough token estimate (1 token ≈ 4 characters)
    const tokenEstimate = Math.ceil(prompt.length / 4);
    
    // If prompt is too long, create a shorter version
    if (tokenEstimate > 3000) {
      const shortBlobJson = {
        mediaId: blobJson.mediaId,
        caption: blobJson.caption?.substring(0, 200) || "",
        title: blobJson.title?.substring(0, 100) || "",
        viewCount: blobJson.viewCount,
        likeCount: blobJson.likeCount,
        workflow: {
          l: blobJson.workflow?.l,
          cc: blobJson.workflow?.cc,
          w: blobJson.workflow?.w?.slice(0, 3) || []
        }
      };
      
      const shortPrompt = buildAnalysisPrompt(shortBlobJson, workflow);
      return {
        prompt: shortPrompt,
        tokenEstimate: Math.ceil(shortPrompt.length / 4)
      };
    }
    
    return { prompt, tokenEstimate };
  } catch (error) {
    console.error('Error building prompt:', error);
    throw new Error('Failed to build analysis prompt');
  }
}

export function buildVenueBasicsPrompt(payload: any, workflow?: any): string {
return [
'You are a meticulous research agent. Your mission is to identify, classify, and compile a factual dossier on a specific travel/tourism venue. You must adhere strictly to the provided data schema and exclusion rules.',
'',
'--- PRIMARY DIRECTIVES ---',
'1.  **EXCLUSION CRITERIA (CRITICAL)**: You MUST NOT process venues that fall into the following categories:',
'    - **Major Chains**: Any large, multinational, or national chain restaurant, café, hotel, or cinema (e.g., Pret A Manger, Premier Inn, Starbucks, major cinema chains). Small, local chains (e.g., a few branches in one city) are acceptable.',
'    - **Religious Institutions**: Churches, mosques, temples, etc., unless they are primarily a major historical or architectural landmark (e.g., Notre Dame Cathedral).',
'    - **Community Groups & Civic Buildings**: Standard community centers, town halls, libraries, etc., unless they have a specific, distinct visitor experience.',
'2.  **ACCURACY IS PARAMOUNT**: If you cannot find a piece of information or are not 100% confident in its value, you MUST use `null` for that field. For fields expecting a list, return an empty list `[]` if no information is found. Do not guess or infer.',
'3.  **STRICT JSON OUTPUT (CRITICAL)**: Your response must be ONLY a valid JSON object - nothing else. No explanations, no text before or after, no markdown formatting. Start with `{` and end with `}`. Any response that is not pure JSON will cause system failure.',
'4.  **STANDARDIZED ERROR HANDLING (CRITICAL)**: If the provided venue cannot be processed for any reason (not found, excluded, etc.), you MUST return a standardized JSON error object. The entire output must be ONLY this JSON object. Use the appropriate reason from the list below:',
'',
'    - **If the venue cannot be found:**',
'      `{"status": "error", "reason": "VENUE_NOT_FOUND", "message": "The research agent could not find a verifiable venue matching the provided name and location context."}`',
'',
'    - **If the venue is found but is an excluded type (e.g., a major chain):**',
'      `{"status": "error", "reason": "EXCLUDED_VENUE_TYPE", "message": "The venue was identified but belongs to an excluded category (e.g., major chain, standard religious institution)."}`',
'',
'    - **If the venue is found but there is not enough information to be useful:**',
'      `{"status": "error", "reason": "INSUFFICIENT_INFORMATION", "message": "A venue was identified, but not enough verifiable factual data could be found to create a dossier."}`',
'',
'--- MISSION OVERVIEW ---',
'Your mission is to identify the venue, classify it with a type and subtype, gather all corresponding factual data, and assemble it into the final JSON.',
'',
'--- STEP 1: IDENTIFY & CLASSIFY VENUE ---',
'First, identify the venue using the payload and location context. Then, determine if it is an excluded venue type. If it is not excluded, classify it with a primary `type` ("Hotel", "Restaurant", or "Experience") and a specific `subtype` based on the examples in the schemas below.',
'',
'**Location Context Guidance:**',
`Location: **City/Area: "${workflow?.l ?? 'MISSING'}", Country: "${workflow?.cc ?? 'MISSING'}"**`,
'Use the **Country** as a strict filter and the **City/Area** as your primary guide. A venue in the same greater metropolitan area is a valid match.',
'',
'**Ambiguity Resolution:**',
'If you find multiple potential venue matches or there is any ambiguity in the identification, select the most likely or best option and proceed with that choice. Do not return explanatory text about the ambiguity. Simply choose the best match and continue with processing that venue.',
'',
'--- STEP 2: GATHER DATA & ASSEMBLE JSON ---',
'If the venue is valid, gather the factual data required to populate the fields for that venue type. Construct a single JSON object that matches the structure exactly. You are NOT required to generate vector fields.',
'',
'--- DATA SCHEMAS & JSON STRUCTURES ---',
'',
'**If the venue is a Hotel, use this structure:**',
'{',
'  "type": "Hotel",',
'  "subtype": "string <e.g., Boutique Hotel, Resort, B&B, Aparthotel, Hotel>",',
'  "hotel_id": "string | null <Unique identifier, if available>",',
'  "name": "string <Official name of the hotel>",',
'  "official_website": "string | null <Full URL to the official website>",',
'  "contact_phone": "string | null <Primary contact phone number>",',
'  "contact_email": "string | null <Primary contact email address>",',
'  "location": {',
'     "street": "string | null",',
'     "city": "string | null",',
'     "state_province": "string | null",',
'     "zipcode": "string | null",',
'     "country": "string | null"',
'  },',
'  "star_rating": "float | null <e.g., 4.5, 5.0>",',
'  "chain_parent": "string | null <e.g., Marriott International, Accor>",',
'  "check_in_time": "string | null <e.g., 15:00>",',
'  "check_out_time": "string | null <e.g., 11:00>",',
'  "pet_policy": "string | null <e.g., Pets allowed, Service animals only>",',
'  "parking_details": "string | null <e.g., On-site paid parking available>",',
'  "accessibility_features": ["string <e.g., Wheelchair accessible rooms>"],',
'  "facilities": [',
'    {',
'      "name": "string <e.g., Rooftop Pool>",',
'      "category": "string <dining, recreation, business, wellness, transport>",',
'      "subcategory": "string | null <e.g., restaurant, pool, gym, spa, parking>"',
'    }',
'  ],',
'  "room_types": [',
'    {',
'      "name": "string <e.g., Deluxe King, Junior Suite>",',
'      "size_sqm": "float | null <Size in square meters, e.g., 35.5>",',
'      "bed_configuration": "string | null <e.g., 1 King, 2 Queens>",',
'      "view_type": "string | null <e.g., City, Sea, Garden, Courtyard>",',
'      "best_for": "string | null <Summarize ideal guest, e.g., \'Solo business traveler\', \'Couple\', \'Family with children\'>",',
'      "amenities": ["string <List key IN-ROOM features, e.g., \'Nespresso machine\', \'Balcony\', \'Rainfall shower\', \'Work desk\'>"]',
'    }',
'  ]',
'}',
'',
'**If the venue is a Restaurant, use this structure:**',
'{',
'  "type": "Restaurant",',
'  "subtype": "string <e.g., Restaurant, Cafe, Bar, Takeaway, Gastropub>",',
'  "restaurant_id": "string | null <Unique identifier, if available>",',
'  "name": "string <Official name of the restaurant>",',
'  "official_website": "string | null <Full URL to the official website>",',
'  "contact_phone": "string | null <Primary contact phone number>",',
'  "contact_email": "string | null <Primary contact email address>",',
'  "location": {',
'     "street": "string | null",',
'     "city": "string | null",',
'     "state_province": "string | null",',
'     "zipcode": "string | null",',
'     "country": "string | null"',
'  },',
'  "short_description": "string | null <A brief, factual summary paragraph describing the restaurant\'s concept, cuisine, and atmosphere>" remove any citations,',
'  "operating_hours": "string | null <e.g., Mon-Fri 17:00-22:00; Sat-Sun 12:00-23:00>",',
'  "cuisine_type": ["string <e.g., Italian, Modern European>"],',
'  "price_range": "string | null <One of: $, $$, $$$, $$$$>",',
'  "reservation_policy": "string | null <e.g., Recommended, Required, Walk-ins only>",',
'  "dietary_options": ["string <e.g., Vegetarian options, Gluten-free menu>"],',
'  "setting_features": ["string <e.g., Outdoor seating, Rooftop>"]',
'}',
'',
'**If the venue is an Experience or Attraction, use this structure:**',
'{',
'  "type": "Experience",',
'  "subtype": "string <e.g., Museum, Landmark, Gallery, Tour, Independent Cinema, Park, Market>",',
'  "experience_id": "string | null <Unique identifier, if available>",',
'  "name": "string <Official name of the experience>",',
'  "official_website": "string | null <Full URL to the official website>",',
'  "contact_phone": "string | null <Primary contact phone number>",',
'  "contact_email": "string | null <Primary contact email address>",',
'  "location": {',
'     "street": "string | null",',
'     "city": "string | null",',
'     "state_province": "string | null",',
'     "zipcode": "string | null",',
'     "country": "string | null"',
'  },',
'  "operating_hours": "string | null <e.g., Tue-Sun 10:00-18:00>",',
'  "adult_price": "float | null <Price for a standard adult ticket>",',
'  "target_audience": ["string <e.g., Family-friendly, Adults only>"],',
'  "accessibility_features": ["string <e.g., Wheelchair accessible>"]',
'}',
'',
'--- PAYLOAD ---',
JSON.stringify(payload, null, 2),
'--- END PAYLOAD ---',
].filter(Boolean).join('\n');
}